# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  password: String!
  name: String!
  nickname: String!
  phone: String!
  profileImage: String!
  introduce: String!
  portfolio: String!
  workRate: Int!
  point: Int!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  paymentType: String!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Product {
  id: String!
  user: User!
  title: String!
  category: PRODUCT_CATEGORY_ENUM!
  sub_category: String!
  summary: String!
  main_text: String!
  sellOrBuy: Boolean!
  workDay: WORKDAY_STATUS_ENUM!
  startTime: Int!
  endTime: Int!
  workTime: Int!
  postNum: String!
  roadAddress: String!
  detailAddress: String!
  deletedAt: DateTime!
}

enum PRODUCT_CATEGORY_ENUM {
  IT
  DESIGN
  TRANSLATE
  VIDEO
  MARKETING
  DOCUMENT
}

enum WORKDAY_STATUS_ENUM {
  WEEKDAY
  WEEKEND
  NEGOTIATION
}

type Request {
  id: String!
  product: Product!
  user: User!
  isAccept: Boolean!
  price: Int!
  createAt: DateTime!
  sentAt: DateTime!
  completedAt: DateTime!
  req_title: String!
  content: String!
}

type Query {
  fetchLoginUser: User!
  fetchUserPaymentInfo: [PointTransaction!]!
  fetchProducts(page: Float!, pageSize: Float!): [Product!]!
  fetchRandomProduct: [Product!]!
  fetchCategoryProduct(category: String!): [Product!]!
  fetchNewbieProduct: [Product!]!
  fetchPointTransactions(impUid: String!): [PointTransaction!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  sendTokenEmail(email: String!): String!
  checkValidToken(email: String!, token: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateNicknameIntroduce(updateNicknameIntroduceInput: UpdateNicknameIntroduceInput!): User!
  updateProfileImage(url: String!): User!
  updateUserInfo(updateUserInfoInput: UpdateUserInfoInput!): User!
  deleteUser: Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Boolean!
  deleteLoginProduct(productId: String!): Boolean!
  createPointTransaction(impUid: String!, amount: Int!, paymentType: String!): PointTransaction!
  cancelPointTransaction(impUid: String!, paymentType: String!): PointTransaction!
}

input CreateUserInput {
  email: String!
  password: String!
  nickname: String!
  phone: String!
  name: String!
}

input UpdateNicknameIntroduceInput {
  nickname: String
  introduce: String
}

input UpdateUserInfoInput {
  name: String
  email: String
  portfolio: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateProductInput {
  title: String!
  category: String!
  sub_category: String!
  summary: String!
  main_text: String!
  sellOrBuy: Boolean!
  workDay: String!
  startTime: Int!
  endTime: Int!
  workTime: Int!
  postNum: String!
  roadAddress: String!
  detailAddress: String!
}

input UpdateProductInput {
  title: String
  category: String
  sub_category: String
  summary: String
  main_text: String
  sellOrBuy: Boolean
  workDay: String
  startTime: Int
  endTime: Int
  workTime: Int
  postNum: String
  roadAddress: String
  detailAddress: String
}
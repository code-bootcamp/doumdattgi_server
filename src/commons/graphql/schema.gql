# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  user_id: String!
  user_email: String!
  user_password: String!
  user_name: String!
  user_nickname: String!
  user_phone: String!
  user_profileImage: String
  user_introduce: String
  user_portfolio: String
  user_workRate: Int!
  user_point: Int!
}

type Payment {
  payment_id: String!
  payment_impUid: String!
  payment_amount: Int!
  payment_status: PAYMENT_STATUS_ENUM!
  payment_type: String!
  user: User!
  payment_createdAt: DateTime!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Product {
  product_id: String!
  user: User!
  product_title: String!
  product_category: PRODUCT_CATEGORY_ENUM!
  product_sub_category: String!
  product_summary: String!
  product_main_text: String!
  product_sellOrBuy: Boolean!
  product_workDay: WORKDAY_STATUS_ENUM!
  product_startTime: Int!
  product_endTime: Int!
  product_workTime: Int!
  product_thumbnailImage: String
  product_isMain: String
  product_postNum: String!
  product_roadAddress: String!
  product_detailAddress: String!
  product_deletedAt: DateTime
}

enum PRODUCT_CATEGORY_ENUM {
  IT
  DESIGN
  TRANSLATE
  VIDEO
  MARKETING
  DOCUMENT
}

enum WORKDAY_STATUS_ENUM {
  WEEKDAY
  WEEKEND
  NEGOTIATION
}

type Request {
  request_id: String!
  product: Product!
  user: User!
  request_isAccept: REQUEST_ISACCEPT_ENUM!
  request_seller: String!
  request_price: Int!
  request_createAt: DateTime!
  request_sentAt: DateTime!
  request_completedAt: DateTime!
  request_title: String!
  request_content: String!
}

enum REQUEST_ISACCEPT_ENUM {
  WAITING
  ACCEPT
  REFUSE
  FINISH
}

type FetchProductOutput {
  product_id: String!
  product_title: String!
  product_category: String!
  product_worDay: String!
  product_url: String!
  u_nickname: String!
  u_url: String!
}

type Query {
  fetchLoginUser: User!
  fetchUserPaymentInfo: [Payment!]!
  fetchProducts(page: Float!, pageSize: Float!): [Product!]!
  fetchRandomProduct: [Product!]!
  fetchCategoryProduct(product_category: String!): [Product!]!
  fetchNewbieProduct: [FetchProductOutput!]!
  fetchRequest: [Request!]!
  fetchWork: [Request!]!
  fetchPayments(payment_impUid: String!): [Payment!]!
}

type Mutation {
  login(user_email: String!, user_password: String!): String!
  logout: String!
  restoreAccessToken: String!
  sendTokenEmail(user_email: String!): String!
  checkValidToken(user_email: String!, user_token: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateNicknameIntroduce(updateNicknameIntroduceInput: UpdateNicknameIntroduceInput!): User!
  updateProfileImage(user_url: String!): User!
  updateUserInfo(updateUserInfoInput: UpdateUserInfoInput!): User!
  deleteUser: Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(product_id: String!, updateProductInput: UpdateProductInput!): Boolean!
  deleteLoginProduct(product_id: String!): Boolean!
  sendRequest(createRequestInput: CreateRequestInput!): Request!
  createPayment(payment_impUid: String!, payment_amount: Int!, payment_type: String!): Payment!
  cancelPayment(payment_impUid: String!, payment_type: String!): Payment!
}

input CreateUserInput {
  user_email: String!
  user_password: String!
  user_nickname: String!
  user_phone: String!
  user_name: String!
}

input UpdateNicknameIntroduceInput {
  user_nickname: String
  user_introduce: String
}

input UpdateUserInfoInput {
  user_name: String
  user_email: String
  user_portfolio: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateProductInput {
  product_title: String!
  product_category: String!
  product_sub_category: String!
  product_summary: String!
  product_main_text: String!
  product_sellOrBuy: Boolean!
  product_workDay: String!
  product_startTime: Int!
  product_endTime: Int!
  product_workTime: Int!
  product_thumbnailImage: String!
  product_isMain: String!
  product_postNum: String!
  product_roadAddress: String!
  product_detailAddress: String!
}

input UpdateProductInput {
  product_title: String
  product_category: String
  product_sub_category: String
  product_summary: String
  product_main_text: String
  product_sellOrBuy: Boolean
  product_workDay: String
  product_startTime: Int
  product_endTime: Int
  product_workTime: Int
  product_thumbnailImage: String
  product_isMain: String
  product_postNum: String
  product_roadAddress: String
  product_detailAddress: String
}

input CreateRequestInput {
  product_id: String!
  request_title: String!
  request_content: String!
  request_seller: String!
  request_price: Int!
}